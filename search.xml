<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Android集训第四天]]></title>
    <url>%2F2018%2F01%2F08%2FAndroid%E9%9B%86%E8%AE%AD%E7%AC%AC%E5%9B%9B%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[上午ProgressBar和SeekBar，这两个都比较简单，无非就是给用户一个显示信息，程序需要好多时间Progress经常与线程的东西一起实现示例： progressBar = findViewById(R.id.progressBar); new Thread(new Runnable() { @Override public void run() { while(true){ progressBar.setProgress(progress); try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } if((progress + 5) &lt; 100){ progress += 5; }else{ progress = 0; } } } }).start(); 这里我新建了一个线程，同时改写其run方法，然后在运行start；SeekBar拖动事件需要改写的方法就比较多 seekBar = findViewById(R.id.seekBar); seekBar.setMax(100); seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() { @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { textView.append(&quot;Current Progress&quot;+String.valueOf(progress)+&quot;\n&quot;); } @Override public void onStartTrackingTouch(SeekBar seekBar) { textView.append(&quot;Start Progress\n&quot;); } @Override public void onStopTrackingTouch(SeekBar seekBar) { textView.append(&quot;Stop Progress\n&quot;); } }); 先定义SeekBar的最大长度,然后在调用setOnSeekBarChangeListener这个方法实现设置一个基本对话框，没有按钮 Dialog dialog = new AlertDialog.Builder(this).setTitle(&quot;对话框&quot;) .setMessage(&quot;显示提示信息&quot;) .setIcon(R.drawable.ic_launcher_background) .create(); dialog.show(); } 设置一个对话框，有按钮的以下是一个示例：我觉得用代码来理解很好理解 Dialog dialog = new AlertDialog.Builder(MainActivity.this) .setTitle(&quot;确定要删除吗？&quot;) .setMessage(&quot;您确定要删除这条消息吗？&quot;) .setIcon(R.drawable.ic_launcher_background) .setPositiveButton(&quot;确定&quot;, new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog, int which) { } }).setNeutralButton(&quot;查看详情&quot;, new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog, int which) { } }).setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog, int which) { } }) .create(); dialog.show(); Toast显示信息的一种机制 Toast.makeText(MainActivity.this,&quot;hello&quot;,Toast.LENGTH_SHORT).show(); 下午ActivityIntent开启第二个界面首先在java里面新创建一个继承Activity的java文件，新的界面肯定要有新的布局，所以在layout里面新创建一个xml文件，然后在新的java文件里面写入 protected void onCreate(@Nullable Bundle savedInstanceState){ super.onCreate(savedInstanceState); setContentView(新的布局的名字); 然后他们就相匹配了（可以这样理解），然后看看AndroidMainifest里面有没有给新的activity注册如果没有注册，就自己手动添加如下代码 &lt;activity android:name=&quot;这里是你的新创建的java文件名字&quot;&gt; &lt;/activity&gt; 这样大致就好了，最后在原来的java文件里面敲出如下代码 Intent it = new Intent(A,B.class);//A,B表示从A界面跳到B界面 startActivity(it); 当然Intent的功能还不止这些，还可以传递数据发送方用.putExtra(“key”,”你要发送的消息”);key（可以这样理解，双方都已知，相当于秘钥，我们都知道就可以互相通信；如果接收方错了，就不能收到）接收方用Intent it = getIntent();这个方法获取Intent，然后再用这个方法it.getStringExtra(“key”)得到发送方所发送的东西]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android集训第三天]]></title>
    <url>%2F2018%2F01%2F07%2FAndroid%E9%9B%86%E8%AE%AD%E7%AC%AC%E4%B8%89%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[上午界面布局学会LinearLayout（线性布局）最常用每一个LinearLayout里面又可分为垂直布局（android:orientation=”vertical”）和水平布局（android:orientation=”horizontal” ）。当垂直布局时，每一行就只有一个元素，多个元素依次垂直往下；水平布局时，只有一行，每一个元素依次向右排列。 学会TableLayout（表格布局）每一个TableLayout里面有表格行TableRow，TableRow里面可以具体定义每一个元素。每个TableRow 都会定义一个 row （事实上，你可以定义其它的子对象，这在下面会解释到）。TableLayout 容器不会显示row 、cloumns或cell 的边框线。每个 row 拥有0个或多个的cell ；每个cell 拥有一个View 对象。表格由列和行组成许多的单元格。表格允许单元格为空。 &lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;TableRow&gt; &lt;EditText android:id=&quot;@+id/Edit_text1&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:hint=&quot;请输入检索关键字...&quot; /&gt; &lt;Button android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;检索&quot; /&gt; ......... &lt;/TableRow&gt; &lt;/TableLayout&gt; ….省略号里面就是你要填写的代码 RelativeLayout（相对布局）一般不用代码直接敲，而是直接拖动控件，相对布局可以理解为某一个元素为参照物，来定位的布局方式。 android：layout_方向 = id 表示 在这个id对应的控件的方向上（上|下） android：layout_align方向 = id 表示和这个控件的（上下左右）对齐 android： layout_to方向Of = id 表示在这个控件的 左或者右 eg: android:layout_below=&quot;@id/la1&quot;/&gt; 将当前控件放置于id为la1 的控件下方。 android:layout_alignParentRight=&quot;true&quot; 使当前控件的右端和父控件的右端对齐。这里属性值只能为true或false，默认false。 android:layout_marginLeft=&quot;10dip&quot; 使当前控件左边空出相应的空间。 android:layout_toLeftOf=&quot;@id/true&quot; 使当前控件置于id为true的控件的左边。 android:layout_alignTop=&quot;@id/ok&quot; 使当前控件与id为ok的控件上端对齐。 AbsoluteLayout，绝对布局，现在基本不用了FrameLayout，帧布局FrameLayout是五大布局中最简单的一个布局，可以说成是层布局方式。在这个布局中，整个界面被当成一块空白备用区域，所有的子元素都不能被指定放置的位置，它们统统放于这块区域的左上角，并且后面的子元素直接覆盖在前面的子元素之上，将前面的子元素部分和全部遮挡。如下，第一个TextView被第二个TextView完全遮挡，第三个TextView遮挡了第二个TextView的部分位置。 下午下午没有讲到什么，就是一些基本控件的反复利用，初步谈了下权限监听键盘，和监听鼠标差不多；监听触摸屏幕，让我们做了个小Demo，加减乘除的计算器如何获取其EditView里面的文件，其实就是一个getTet（）的方法，获取出来的是一个String类型的东西。]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android集训第二天]]></title>
    <url>%2F2018%2F01%2F05%2FAndroid%E9%9B%86%E8%AE%AD%E7%AC%AC%E4%BA%8C%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[上午android:password 用于隐藏其文本(目前所了解到) android:maxLength 正如其字面意思，最大长度，超出部分不显示 android:autoLink 自我感觉这个东西很有用，不用向系统申请权限就直接打开网址等等 在面对很多相同属性的控件的时候我们可以选择样式style，把重复的属性抽象出来，在style.xml里面定义style格式如下: &lt;style name=&quot;custom&quot;&gt; &lt;item name=&quot;android:autoLink&quot;&gt;all&lt;/item&gt; &lt;item name=&quot;android:password&quot;&gt;false&lt;/item&gt; &lt;item name=&quot;android:maxLength&quot;&gt;20&lt;/item&gt; &lt;item name=&quot;android:textColor&quot;&gt;@color/red&lt;/item&gt; ...... ...... &lt;/style&gt; 然后在你所需要这个style的控件里面添加style=”@style/custom”这个属性，其中custom是你自己定义的style文件名最简单的事件处理方式 bt1.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { tv.setText(R.string.second); ........ ........ } }); ImageButton（用代码说清楚点）这是ImageButton的xml &lt;ImageButton android:id=&quot;@+id/image_bt1&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:background=&quot;@drawable/button_state&quot;/&gt; 然后我们在res/drawable，右键new/Drawable resource files，编译器会自动给你匹配selector你只需要填写名称即可，如果没有出现就新建一个file然后自己找selector这个得到 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:state_pressed=&quot;false&quot; android:drawable=&quot;@drawable/image2&quot;/&gt; &lt;item android:state_pressed=&quot;true&quot; android:drawable=&quot;@drawable/image3&quot;/&gt; &lt;/selector&gt; 中间两行代码是自己敲的，用于点击图片前后图片发生变化，然后与上面的@drawable/button_state对应 下午CheckBox 允许多选RadioButton只能单选，但要和RadioGroup一起使用示例： &lt;CheckBox android:id=&quot;@+id/cb&quot; android:text=&quot;成都&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt; &lt;CheckBox android:id=&quot;@+id/cb1&quot; android:text=&quot;绵阳&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt; 这里允许选择成都和绵阳一同选择 &lt;RadioGroup android:id=&quot;@+id/rg&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;&gt; &lt;RadioButton android:id=&quot;@+id/rb_man&quot; android:text=&quot;man&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt; &lt;RadioButton android:id=&quot;@+id/rg_woman&quot; android:text=&quot;woman&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt; &lt;RadioButton android:id=&quot;@+id/rg_animal&quot; android:text=&quot;animal&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt; .......... .......... .......... .......... &lt;/RadioGroup&gt; 这里只允许单选（man，woman，animal…….中其中之一）但是我们怎么知道用户在RadioGroup选择了啥？ 这就需要一个RadioGroup.OnCheckedChangeListener()方法,然后匹配xml里面的id示例： radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() { @Override public void onCheckedChanged(RadioGroup group, int checkedId) { switch (checkedId){ case R.id.rb_man:textView.setText(&quot;man is cheaked&quot;);break; case R.id.rg_woman:textView.setText(&quot;woman is cheaked&quot;);break; default:textView.setText(&quot;Nothing&quot;);break; } } }); 配置列表项1、直接通过资源文件配置定义一个values/city_labels.xml文件，用元素指定，定义内容如下示例： &lt;string-array name=&quot;city_labels&quot;&gt; &lt;item&gt;成都&lt;/item&gt; &lt;item&gt;绵阳&lt;/item&gt; &lt;item&gt;南充&lt;/item&gt; &lt;/string-array&gt; 然后在Spinner这个控件(下拉列表框)直接使用android:entries=”@array/city_labels”2、通过ArrayAdapeter类实现讲了三种方法 public ArrayAdapter(Context context,int textViewResourceId,List&lt;T&gt; objects) public ArrayAdapter(Context context,int textViewResourceId,List&lt;T&gt; objects) public static ArrayAdapter&lt;CharSequence&gt;createFromResource (Context context,int textArrayResId,int textViewResourceId) 通过示例来学习（以下是一些主要代码）首先定义 private ArrayAdapter&lt;String&gt; adapter; private List&lt;String&gt; color_data; color_data = new ArrayList&lt;String&gt;(); color_data.add(&quot;red&quot;); color_data.add(&quot;blue&quot;); color_data.add(&quot;green&quot;); adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_dropdown_item, color_data); spinner.setAdapter(adapter); 华丽的分隔符—————————————————————————————————————————————————————– 直接在java中写 private ArrayAdapter&lt;String&gt; adapter_edu; private String[] arry_edu = {&quot;小学&quot;, &quot;初中&quot;, &quot;高中&quot;, &quot;大学&quot;}; adapter_edu = new ArrayAdapter(this, android.R.layout.simple_spinner _dropdown_item, arry_edu); spinner.setAdapter(adapter_edu); 华丽的分隔符—————————————————————————————————————————————————————– 先在values/strings.xml里面用&lt;string-array&gt;元素指定animal &lt;resources&gt; &lt;string name=&quot;app_name&quot;&gt;MySpinnerDemo&lt;/string&gt; &lt;string-array name=&quot;animal&quot;&gt; &lt;item&gt;cat&lt;/item&gt; &lt;item&gt;dog&lt;/item&gt; &lt;item&gt;pig&lt;/item&gt; &lt;/string-array&gt; &lt;/resources&gt; 然后在在java里面写 adapter_animal = ArrayAdapter.createFromResource(this, R.array.animal, android.R.layout.simple_spinner_dropdown_item); spinner.setAdapter(adapter_animal); 了解到Spinner这个控件是用AdapterView.OnItemSelectedListener()这个来实现监听 spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position , long id) { // if(position == 0){ textView.setText(position+&quot;点击&quot;); // } ......... } @Override public void onNothingSelected(AdapterView&lt;?&gt; parent) { textView.setText(&quot;Nothing&quot;); } }); 下面的onNothingSelected没用过，不知道是什么玩意，百度上的解释是这样的：当我们的adapter为空的时候就会调用到这个方法]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android集训第一天]]></title>
    <url>%2F2018%2F01%2F04%2FAndroid%E9%9B%86%E8%AE%AD%E7%AC%AC%E4%B8%80%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[上午老师也没有讲什么好东西，无非就是给我们吹吹牛，讲讲Android的历史，讲了Android的基本框架（那个东西算作是框架吧）由底层向用户一一介绍，然后讲了一堆没用的东西balabala，后面老师用Android studio一步一步的讲解，虽然大致内容我都是知道的，然后开始了第一个代码helloworld，然后就下课了 下午介绍TextView以及Android studio 左边工具区 &lt;TextView android:id=&quot;@+id/textview1&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;@string/app_name&quot; android:textColor=&quot;@color/red&quot; /&gt; 然后讲解了RGB（虽然感觉没用），然后利用res/values/strings.xml与TextView相匹配，主要讲解了TextView中的autoLink none 0x00 web 0x01 email 0x02 phone 0x04 map 0x08 all 0x0f eg：在布局res/中定义，只需要tv.setText(“www.baidu.com”);如果不在 布局 res/中定义，则需要在java/中调用setAutoLinkMsak（）方法 tv = (TextView) super.findViewById(R.id.textview1); tv.setAutoLinkMask(Linkify.ALL); tv.setText(&quot;www.baidu.com&quot;);]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一时语塞]]></title>
    <url>%2F2017%2F07%2F25%2FFrist%2F</url>
    <content type="text"><![CDATA[第一天听从学长的建议，第一次搞了这个博客，后来想虽然没什么可写的但是不把这件事情做完有点可惜然后弄了一下午，晚上弄到大概2点左右，总是部署不上去，后面放弃了，就sleep了，好困(:з」∠) 第二天百度查了很多方法，花了一上午还是没有部署到线上，我绝望了，还是继续百度，最后发现以前那种部署方法都是2.0的版本，然后呢从官网上下下来的最新版本是3.0系列，3.0的部署需要下面这种： deploy: type: git repository: git@github.com:yourname/yourname.github.io.git branch: master 真是气死人了然后又上网看了看优化，加了背景音乐，一些杂七杂八东西，emmm……现在大概就是这样，我看了下，好像加了歌曲（网易云外链）加载速度会很慢，然后这个主题呢，好像手机端的美化不是那么好看，也不在意啦，反正能用就好了。。。然后发现图片加载速度很慢。。。没钱搞那个什么CDN，还不如买点吃的犒劳下自己，哈哈哈，就这样 正在慢慢的完善中……反正目前没什么东西，以后八成也不会有什么东西，不想看的话右上角 X 慢走不送]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Hello World. 据说这是惯例 哈哈哈，我只是个萌新，不是大佬]]></content>
  </entry>
</search>
